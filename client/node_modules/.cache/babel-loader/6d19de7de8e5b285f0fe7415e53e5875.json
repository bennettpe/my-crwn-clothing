{"ast":null,"code":"// Firebase Utilities \nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nlet firebaseConfig = {\n  apiKey: 'AIzaSyCJj-VkBjkA9iG53JrRgxVoWsaFBj3BkDc',\n  authDomain: 'my-crwn-db-7a068.firebaseapp.com',\n  databaseURL: 'https://my-crwn-db-7a068.firebaseio.com',\n  projectId: 'my-crwn-db-7a068',\n  storageBucket: 'my-crwn-db-7a068.appspot.com',\n  messageingSenderId: '325464700114',\n  appId: '1:325464700114:web:15ee08e6444012e52ce90b',\n  measurementId: 'G-RHJ6N8RWFY'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // Check if userAuth object does not exist\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"user/1230sajadmdaswu\");\n  console.log(usedRef);\n  const snapShot = await userRef.get(); // if (!snapShot.exists) {\n  //   const { displayName, email} = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   } catch (error) {\n  //     console.log('error creating user, error.message');\n  //   }\n  // }\n\n  return userRef;\n}; // Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig); // make auth and firestore references \n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Goole Auth Provider\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\paule\\Dev\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messageingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","console","log","usedRef","snapShot","get","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,kCAFO;AAGnBC,EAAAA,WAAW,EAAE,yCAHM;AAInBC,EAAAA,SAAS,EAAE,kBAJQ;AAKnBC,EAAAA,aAAa,EAAE,8BALI;AAMnBC,EAAAA,kBAAkB,EAAE,cAND;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAArB;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AACA,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,wBAAhB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AAEA,QAAMC,QAAQ,GAAG,MAAMN,OAAO,CAACO,GAAR,EAAvB,CAN2E,CAQ5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC,SAAOP,OAAP;AACD,CAvBM,C,CAyBP;;AACAb,QAAQ,CAACqB,aAAT,CAAuBpB,cAAvB,E,CAEA;;AACA,OAAO,MAAMqB,IAAI,GAAGtB,QAAQ,CAACsB,IAAT,EAAb;AACP,OAAO,MAAMR,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAMS,QAAQ,GAAG,IAAIvB,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevB,QAAf","sourcesContent":["// Firebase Utilities \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nlet firebaseConfig = {\r\n  apiKey: 'AIzaSyCJj-VkBjkA9iG53JrRgxVoWsaFBj3BkDc',\r\n  authDomain: 'my-crwn-db-7a068.firebaseapp.com',\r\n  databaseURL: 'https://my-crwn-db-7a068.firebaseio.com',\r\n  projectId: 'my-crwn-db-7a068',\r\n  storageBucket: 'my-crwn-db-7a068.appspot.com',\r\n  messageingSenderId: '325464700114',\r\n  appId: '1:325464700114:web:15ee08e6444012e52ce90b',\r\n  measurementId: 'G-RHJ6N8RWFY'\r\n}; \r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  // Check if userAuth object does not exist\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`user/1230sajadmdaswu`);\r\n  console.log(usedRef);\r\n  \r\n  const snapShot = await userRef.get();\r\n\r\n // if (!snapShot.exists) {\r\n //   const { displayName, email} = userAuth;\r\n //   const createdAt = new Date();\r\n //   try {\r\n //     await userRef.set({\r\n //       displayName,\r\n //       email,\r\n //       createdAt,\r\n //       ...additionalData\r\n //     });\r\n //   } catch (error) {\r\n //     console.log('error creating user, error.message');\r\n //   }\r\n // }\r\n  return userRef;\r\n};\r\n\r\n// Initialize Firebase \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// make auth and firestore references \r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// Goole Auth Provider\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}