{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\paule\\\\Dev\\\\crwn-clothing\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Firebase Utilities \nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconsole.log(\"\".concat(process.env.PUBLISHABLEKEY));\nconsole.log(\"\".concat(process.env.APIKEY));\nlet firebaseConfig = {\n  apiKey: \"\".concat(process.env.REACT_APP_APIKEY),\n  authDomain: \"\".concat(process.env.REACT_APP_AUTHDOMAIN),\n  databaseURL: \"\".concat(process.env.REACT_APP_DATABASEURL),\n  projectId: \"\".concat(process.env.REACT_APP_PROJECTID),\n  storageBucket: \"\".concat(process.env.REACT_APP_STORAGEBUCKET),\n  messageingSenderId: \"\".concat(process.env.REACT_APP_MESSAGINGSENDERID),\n  appId: \"\".concat(process.env.REACT_APP_APPID),\n  measurementId: \"\".concat(process.env.REACT_APP_MEASUREMENTID)\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // Check if userAuth object does not exist\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"user/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user, error.message');\n    }\n  }\n\n  return userRef;\n}; // Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig); // make auth and firestore references \n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Goole Auth Provider\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\paule\\Dev\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","console","log","process","env","PUBLISHABLEKEY","APIKEY","firebaseConfig","apiKey","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","databaseURL","REACT_APP_DATABASEURL","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messageingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","measurementId","REACT_APP_MEASUREMENTID","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEAC,OAAO,CAACC,GAAR,WAAeC,OAAO,CAACC,GAAR,CAAYC,cAA3B;AACAJ,OAAO,CAACC,GAAR,WAAeC,OAAO,CAACC,GAAR,CAAYE,MAA3B;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,YAAKL,OAAO,CAACC,GAAR,CAAYK,gBAAjB,CADa;AAEnBC,EAAAA,UAAU,YAAKP,OAAO,CAACC,GAAR,CAAYO,oBAAjB,CAFS;AAGnBC,EAAAA,WAAW,YAAKT,OAAO,CAACC,GAAR,CAAYS,qBAAjB,CAHQ;AAInBC,EAAAA,SAAS,YAAKX,OAAO,CAACC,GAAR,CAAYW,mBAAjB,CAJU;AAKnBC,EAAAA,aAAa,YAAKb,OAAO,CAACC,GAAR,CAAYa,uBAAjB,CALM;AAMnBC,EAAAA,kBAAkB,YAAKf,OAAO,CAACC,GAAR,CAAYe,2BAAjB,CANC;AAOnBC,EAAAA,KAAK,YAAKjB,OAAO,CAACC,GAAR,CAAYiB,eAAjB,CAPc;AAQnBC,EAAAA,aAAa,YAAKnB,OAAO,CAACC,GAAR,CAAYmB,uBAAjB;AARM,CAArB;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AACA,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,gBAAsBJ,QAAQ,CAACK,GAA/B,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACUT,QADV,CACZS,WADY;AAAA,UACCC,KADD,GACUV,QADV,CACCU,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDV,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdtC,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD;AACF;;AACD,SAAOyB,OAAP;AACD,CArBM,C,CAuBP;;AACA3B,QAAQ,CAACwC,aAAT,CAAuBjC,cAAvB,E,CAEA;;AACA,OAAO,MAAMkC,IAAI,GAAGzC,QAAQ,CAACyC,IAAT,EAAb;AACP,OAAO,MAAMb,SAAS,GAAG5B,QAAQ,CAAC4B,SAAT,EAAlB,C,CAEP;;AACA,MAAMc,QAAQ,GAAG,IAAI1C,QAAQ,CAACyC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe1C,QAAf","sourcesContent":["// Firebase Utilities \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconsole.log(`${process.env.PUBLISHABLEKEY}`);\r\nconsole.log(`${process.env.APIKEY}`);\r\n\r\nlet firebaseConfig = {\r\n  apiKey: `${process.env.REACT_APP_APIKEY}`,\r\n  authDomain: `${process.env.REACT_APP_AUTHDOMAIN}`,\r\n  databaseURL: `${process.env.REACT_APP_DATABASEURL}`,\r\n  projectId: `${process.env.REACT_APP_PROJECTID}`,\r\n  storageBucket: `${process.env.REACT_APP_STORAGEBUCKET}`,\r\n  messageingSenderId: `${process.env.REACT_APP_MESSAGINGSENDERID}`,\r\n  appId: `${process.env.REACT_APP_APPID}`,\r\n  measurementId: `${process.env.REACT_APP_MEASUREMENTID}`,\r\n}; \r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  // Check if userAuth object does not exist\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email} = userAuth;\r\n    const createdAt = new Date();\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user, error.message');\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n\r\n// Initialize Firebase \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// make auth and firestore references \r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// Goole Auth Provider\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}