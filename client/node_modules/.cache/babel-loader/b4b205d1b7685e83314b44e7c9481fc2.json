{"ast":null,"code":"// Firebase Utilities \nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore'; // Get Firebase Config \n\nconst config = require('../config');\n\nlet firebaseConfig = {\n  apiKey: config.firebase.apiKey,\n  authDomain: config.firebase.authDomain,\n  databaseURL: config.firebase.databaseURL,\n  projectId: config.firebase.projectId,\n  storageBucket: config.firebase.storageBucket,\n  messageingSenderId: config.firebase.messageingSenderId,\n  appId: config.firebase.appId,\n  measurementId: config.firebase.measurementId\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  // Check if userAuth object does not exist\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"user/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n}; // Initialize Firebase \n\nfirebase.initializeApp(firebaseConfig); // make auth and firestore references \n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Goole Auth Provider\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:\\Users\\paule\\Dev\\crwn-clothing\\src\\firebase\\firebase.utils.js"],"names":["firebase","config","require","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messageingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEH,MAAM,CAACD,QAAP,CAAgBI,MADL;AAEnBC,EAAAA,UAAU,EAAEJ,MAAM,CAACD,QAAP,CAAgBK,UAFT;AAGnBC,EAAAA,WAAW,EAAEL,MAAM,CAACD,QAAP,CAAgBM,WAHV;AAInBC,EAAAA,SAAS,EAAEN,MAAM,CAACD,QAAP,CAAgBO,SAJR;AAKnBC,EAAAA,aAAa,EAAEP,MAAM,CAACD,QAAP,CAAgBQ,aALZ;AAMnBC,EAAAA,kBAAkB,EAAER,MAAM,CAACD,QAAP,CAAgBS,kBANjB;AAOnBC,EAAAA,KAAK,EAAET,MAAM,CAACD,QAAP,CAAgBU,KAPJ;AAQnBC,EAAAA,aAAa,EAAEV,MAAM,CAACD,QAAP,CAAgBW;AARZ,CAArB;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E;AACA,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,gBAAsBJ,QAAQ,CAACK,GAA/B,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAED,CAPM,C,CASP;;AACAnB,QAAQ,CAACuB,aAAT,CAAuBpB,cAAvB,E,CAEA;;AACA,OAAO,MAAMqB,IAAI,GAAGxB,QAAQ,CAACwB,IAAT,EAAb;AACP,OAAO,MAAMR,SAAS,GAAGhB,QAAQ,CAACgB,SAAT,EAAlB,C,CAEP;;AACA,MAAMS,QAAQ,GAAG,IAAIzB,QAAQ,CAACwB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAezB,QAAf","sourcesContent":["// Firebase Utilities \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n// Get Firebase Config \r\nconst config = require('../config')\r\n\r\nlet firebaseConfig = {\r\n  apiKey: config.firebase.apiKey,\r\n  authDomain: config.firebase.authDomain,\r\n  databaseURL: config.firebase.databaseURL,\r\n  projectId: config.firebase.projectId,\r\n  storageBucket: config.firebase.storageBucket,\r\n  messageingSenderId: config.firebase.messageingSenderId,\r\n  appId: config.firebase.appId,\r\n  measurementId: config.firebase.measurementId\r\n}; \r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  // Check if userAuth object does not exist\r\n  if (!userAuth) return;\r\n  const userRef = firestore.doc(`user/${userAuth.uid}`);\r\n  const snapShot = await userRef.get();\r\n  console.log(snapShot);\r\n\r\n}\r\n\r\n// Initialize Firebase \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// make auth and firestore references \r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n// Goole Auth Provider\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}